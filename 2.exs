# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

fibo = Stream.unfold(
  {1, 2},
  fn n -> {n, {elem(n, 1), elem(n, 0) + elem(n, 1)}} end
) |> Stream.map(fn n -> elem(n, 0) end)

Stream.take_while(fibo, fn n -> n <= 4000000 end)
  |> Stream.filter(&(rem(&1, 2) == 0))
  |> Enum.sum
  |> IO.puts
